@model EmployeeMaster.Models.Employee

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Employee</h4>
        <hr />

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Salary, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Salary, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Salary, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Country_Id, "Country", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Country_Id", new SelectList(new[] {
            new { Value = "1", Text = "India" },
            new { Value = "2", Text = "Canada" },
            new { Value = "3", Text = "UK" },
            new { Value = "4", Text = "Australia" },
            new { Value = "1", Text = "USA" },
            new { Value = "2", Text = "Ireland" },
            new { Value = "3", Text = "Pakistan" },
            new { Value = "4", Text = "Japan" },
            }, "Value", "Text"), htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Country_Id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Maritial_Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <label>
                    @Html.RadioButtonFor(model => model.Maritial_Status, "true") Married
                </label>
                <label>
                    @Html.RadioButtonFor(model => model.Maritial_Status, "false") Single
                </label>
                @Html.ValidationMessageFor(model => model.Maritial_Status, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Hobbies, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <label>
                    @Html.CheckBox("Hobbies", new { Value = "Reading" }) Reading
                </label>
                <label>
                    @Html.CheckBox("Hobbies", new { Value = "Traveling" }) Traveling
                </label>
                <label>
                    @Html.CheckBox("Hobbies", new { Value = "Sports" }) Sports
                </label>
                @Html.ValidationMessageFor(model => model.Hobbies, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

